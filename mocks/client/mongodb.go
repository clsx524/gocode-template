// Code generated by MockGen. DO NOT EDIT.
// Source: client/mongodb.go

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongo "go.mongodb.org/mongo-driver/mongo"
)

// MockMongo is a mock of Mongo interface.
type MockMongo struct {
	ctrl     *gomock.Controller
	recorder *MockMongoMockRecorder
}

// MockMongoMockRecorder is the mock recorder for MockMongo.
type MockMongoMockRecorder struct {
	mock *MockMongo
}

// NewMockMongo creates a new mock instance.
func NewMockMongo(ctrl *gomock.Controller) *MockMongo {
	mock := &MockMongo{ctrl: ctrl}
	mock.recorder = &MockMongoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongo) EXPECT() *MockMongoMockRecorder {
	return m.recorder
}

// GetMongoClient mocks base method.
func (m *MockMongo) GetMongoClient(ctx context.Context) *mongo.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoClient", ctx)
	ret0, _ := ret[0].(*mongo.Client)
	return ret0
}

// GetMongoClient indicates an expected call of GetMongoClient.
func (mr *MockMongoMockRecorder) GetMongoClient(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoClient", reflect.TypeOf((*MockMongo)(nil).GetMongoClient), ctx)
}
